{"version":3,"sources":["About.js","config/config.js","utils/Loading.js","utils/Utils.js","Restaurant/RestaurantNotFound.js","Restaurant/Restaurant.js","Restaurant/RestaurantsTable.js","Restaurant/Restaurants.js","NotFound.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["About","Card","Body","Title","Text","className","Footer","href","Config","uri","perPage","Loading","Jumbotron","Spinner","animation","variant","Utils","age","grades","reduce","acc","cur","score","length","parseDate","utc","date","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","fixCase","word","split","map","w","toUpperCase","slice","toLowerCase","join","RestaurantNotFound","props","search","to","Button","size","Restaurant","useState","restaurant","setRestaurant","loading","setLoading","useEffect","a","fetch","id","response","json","data","hasOwnProperty","fetchData","name","address","building","street","borough","MapContainer","style","height","center","coord","zoom","scrollWheelZoom","TileLayer","url","Marker","position","Container","fluid","CardDeck","grade","index","Header","errorMessage","RestaurantsTable","history","useHistory","maxTextWidth","text","Row","restaurants","data-id","_id","onClick","push","xmlns","width","fill","class","viewBox","d","cuisine","Restaurants","setRestaurants","page","setPage","setBorough","query","queryString","parse","boroughQuery","encodeURI","firstPage","Nav","aria-label","Pagination","Prev","disabled","e","preventDefault","Item","Next","NotFound","Main","randomRestaurant","setRandomRestaurant","randomPage","Math","trunc","random","randomIndex","Img","src","alt","App","searchString","setSearchString","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Link","Form","onSubmit","inline","FormControl","type","placeholder","value","onChange","target","Col","exact","path","render","location","match","params","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.073d88b1.chunk.js","sourcesContent":["import { Card } from \"react-bootstrap\";\n\nexport default function About() {\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>Maickel Siqueira</Card.Title>\n        <Card.Text className=\"text-muted\">Student at Seneca college.</Card.Text>\n      </Card.Body>\n      <Card.Footer>\n        Check my other projects at my <a href=\"https://www.maickel.ca\">portfolio</a> and <a href=\"https://github.com/mksiq\">github</a>.\n      </Card.Footer>\n    </Card>\n  );\n}\n","const Config = {\n  uri: \"https://web422-assignment1-msiqueira.herokuapp.com/api/restaurants\",\n  // uri: \"http://localhost:8080/api/restaurants\",\n  perPage: 10,\n};\n\nexport default Config;\n","import { Jumbotron, Spinner } from \"react-bootstrap\";\n\nexport default function Loading() {\n  return (\n    <Jumbotron className=\"text-center h4 mt-5\">\n      <div className=\"text-center\">\n        <div className=\"text-center h3 mt-2\">\n          <Spinner animation=\"border\" variant=\"secondary\" className=\"mr-3\" />{\" \"}\n          Loading.\n        </div>\n        <p>Wait a few seconds. If it takes too long please refresh.</p>\n      </div>\n    </Jumbotron>\n  );\n}\n","const Utils = {\n  age: function avg(grades) {\n    return grades.reduce((acc, cur) => acc + cur.score, 0) / grades.length;\n  },\n  parseDate: function (utc) {\n    let date = new Date(utc);\n    let dd = date.getDate();\n    let mm = date.getMonth() + 1;\n    let yyyy = date.getFullYear();\n    return `${mm}/${dd}/${yyyy}`;\n  },\n  /**\n   * Fix the case of the query to match pattern in database: Only first letter is uppercase\n   * Had to treats as array for the borough of Staten Island\n   *\n   * @param {string} words query to fix\n   * @return {string} fixed query\n   */\n  fixCase: function (word) {\n    return word\n      .split(\" \")\n      .map((w) => w[0].toUpperCase() + w.slice(1).toLowerCase())\n      .join(\" \");\n  },\n};\n\nexport default Utils;\n","import { Button, Jumbotron } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport default function RestaurantNotFound(props) {\n  return (\n    <>\n      <Jumbotron>\n        <div className=\"text-center\">\n          <p className=\"text-center h3 mt-2\">\n            No restaurants found {props.search}.\n          </p>\n          <p>Please retry.</p>\n          <br />\n          <Link to=\"/restaurants\">\n            <Button variant=\"secondary\" size=\"sm\">\n              Clear\n            </Button>\n          </Link>\n        </div>\n      </Jumbotron>\n    </>\n  );\n}\n","import { MapContainer, TileLayer, Marker } from \"react-leaflet\";\nimport { useState, useEffect } from \"react\";\nimport Config from \"../config/config\";\nimport Loading from \"../utils/Loading\";\nimport { Card, CardDeck, Container } from \"react-bootstrap\";\nimport Utils from \"../utils/Utils\";\nimport RestaurantNotFound from \"./RestaurantNotFound\";\n\nexport default function Restaurant(props) {\n  const [restaurant, setRestaurant] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      let data;\n\n      const response = await fetch(`${Config.uri}/${props.id}`);\n      data = await response.json();\n      if (data.hasOwnProperty(\"_id\")) {\n        setRestaurant(data);\n      } else {\n        setRestaurant(null);\n      }\n      setLoading(false);\n    }\n    fetchData();\n  }, [props.id]);\n\n  if (!loading) {\n    if (restaurant) {\n      return (\n        <>\n          <Card>\n            <Card.Body>\n              <Card.Title>{restaurant.name}</Card.Title>\n              <Card.Text className=\"text-muted\">\n                {restaurant.address.building} {restaurant.address.street} -\n                {restaurant.borough}\n              </Card.Text>\n            </Card.Body>\n          </Card>\n          <MapContainer\n            style={{ height: \"400px\" }}\n            center={[restaurant.address.coord[1], restaurant.address.coord[0]]}\n            zoom={13}\n            scrollWheelZoom={false}\n          >\n            <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n            <Marker\n              position={[\n                restaurant.address.coord[1],\n                restaurant.address.coord[0],\n              ]}\n            ></Marker>\n          </MapContainer>\n          <br />\n          <h4>Ratings</h4>\n          <hr />\n          <Container fluid>\n            <CardDeck>\n              {restaurant.grades.map((grade, index) => (\n                <Card key={index} className=\"mr-4\">\n                  <Card.Header>Grade: {grade.grade}</Card.Header>\n                  <Card.Body>\n                    Completed: {Utils.parseDate(grade.date)}\n                  </Card.Body>\n                </Card>\n              ))}\n            </CardDeck>\n          </Container>\n        </>\n      );\n    } else {\n      const errorMessage = `with id ${props.id}`;\n      return <RestaurantNotFound search={errorMessage} />;\n    }\n  } else {\n    return <Loading />;\n  }\n}\n","import { Container, Row } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function RestaurantsTable(props) {\n  let history = useHistory();\n\n  function maxTextWidth(text){\n    if(text.length < 35){\n      return text;\n    }\n    text = text.slice(0, 32) + \"...\";\n    return text;\n  }\n\n  return (\n    <>\n      <Row className=\"p-2\">\n        {props.restaurants.map((restaurant, index) => (\n          <Container\n            key={index}\n            data-id={restaurant._id}\n            onClick={() => {\n              history.push(`/restaurant/${restaurant._id}`);\n            }}\n            className=\"col-12 col-md-6 p-2\"\n          >\n            <Container className=\"restaurant-card\">\n              <Container>\n                <Row className=\"justify-content-between\">\n                  <h4 className=\"font-weight-bold\">{maxTextWidth(restaurant.name)}</h4>\n                  <span className=\"mr-0\">{restaurant.borough}</span>\n                </Row>\n                <Row className=\"justify-content-between\">\n                  <h5 className=\"text-muted\"><span className=\"mr-2 mb-1\" ><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-shop\" viewBox=\"0 0 16 16\">\n  <path d=\"M2.97 1.35A1 1 0 0 1 3.73 1h8.54a1 1 0 0 1 .76.35l2.609 3.044A1.5 1.5 0 0 1 16 5.37v.255a2.375 2.375 0 0 1-4.25 1.458A2.371 2.371 0 0 1 9.875 8 2.37 2.37 0 0 1 8 7.083 2.37 2.37 0 0 1 6.125 8a2.37 2.37 0 0 1-1.875-.917A2.375 2.375 0 0 1 0 5.625V5.37a1.5 1.5 0 0 1 .361-.976l2.61-3.045zm1.78 4.275a1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0 1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0 1.375 1.375 0 1 0 2.75 0V5.37a.5.5 0 0 0-.12-.325L12.27 2H3.73L1.12 5.045A.5.5 0 0 0 1 5.37v.255a1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0zM1.5 8.5A.5.5 0 0 1 2 9v6h1v-5a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1v5h6V9a.5.5 0 0 1 1 0v6h.5a.5.5 0 0 1 0 1H.5a.5.5 0 0 1 0-1H1V9a.5.5 0 0 1 .5-.5zM4 15h3v-5H4v5zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-3zm3 0h-2v3h2v-3z\"/>\n</svg></span>{maxTextWidth(restaurant.cuisine)}</h5>\n                  <span className=\"mr-0 text-muted\"><span className=\"mr-2 mb-1\" ><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-geo-alt\" viewBox=\"0 0 16 16\">\n  <path d=\"M12.166 8.94c-.524 1.062-1.234 2.12-1.96 3.07A31.493 31.493 0 0 1 8 14.58a31.481 31.481 0 0 1-2.206-2.57c-.726-.95-1.436-2.008-1.96-3.07C3.304 7.867 3 6.862 3 6a5 5 0 0 1 10 0c0 .862-.305 1.867-.834 2.94zM8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10z\"/>\n  <path d=\"M8 8a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm0 1a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"/>\n</svg></span>\n                    {restaurant.address.building} {restaurant.address.street}\n                  </span>\n                </Row>\n              </Container>\n            </Container>\n          </Container>\n        ))}\n      </Row>\n    </>\n  );\n}\n","import queryString from \"query-string\";\nimport { useState, useEffect } from \"react\";\nimport { Card, Nav, Pagination } from \"react-bootstrap\";\nimport Config from \"../config/config\";\nimport Loading from \"../utils/Loading\";\nimport Utils from \"../utils/Utils\";\nimport RestaurantNotFound from \"./RestaurantNotFound\";\nimport RestaurantsTable from \"./RestaurantsTable\";\n\nexport default function Restaurants(props) {\n  const [restaurants, setRestaurants] = useState(null);\n  const [page, setPage] = useState(1);\n  const [borough, setBorough] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  let query = queryString.parse(props.query);\n  useEffect(() => {\n    let boroughQuery = query.borough\n      ? `&borough=${Utils.fixCase(query.borough)}`\n      : \"\";\n    boroughQuery = encodeURI(boroughQuery);\n    setBorough(query.borough);\n    async function fetchData() {\n      setLoading(true);\n      const response = await fetch(\n        // appends borough that either is empty or the concatenated borough to query\n        `${Config.uri}?page=${page}&perPage=${Config.perPage}${boroughQuery}`\n      );\n      const data = await response.json();\n      setRestaurants(data);\n      setLoading(false);\n    }\n    fetchData();\n  }, [page, query.borough]);\n\n  const nextPage = (e) => {\n    e.preventDefault();\n    setPage(page + 1);\n  };\n\n  let firstPage = page === 1;\n\n  const previousPage = (e) => {\n    e.preventDefault();\n    if (page > 1) {\n      setPage(page - 1);\n    }\n  };\n\n  if (!loading) {\n    if (restaurants && restaurants.length > 1) {\n      return (\n        <>\n          <Card>\n            <Card.Body>\n              <Card.Title>Restaurant List</Card.Title>\n              <Card.Text className=\"text-muted\">\n                Full list of restaurants. Optionally sorted by borough:{\" \"}\n                {borough}\n              </Card.Text>\n            </Card.Body>\n          </Card>\n          <br />\n          <RestaurantsTable restaurants={restaurants} />\n          <Nav\n            aria-label=\"Restaurant navigation\"\n            className=\"justify-content-center\"\n          >\n            <Pagination>\n              <Pagination.Prev disabled={firstPage} onClick={previousPage} />\n              <Pagination.Item>{page}</Pagination.Item>\n              <Pagination.Next onClick={nextPage} />\n            </Pagination>\n          </Nav>\n        </>\n      );\n    } else {\n      const errorMessage = `in this borough ${borough}`;\n      return <RestaurantNotFound search={errorMessage} />;\n    }\n  } else {\n    return <Loading />;\n  }\n}\n","import { Jumbotron } from \"react-bootstrap\";\n\nexport default function NotFound() {\n  return (\n    <>\n      <Jumbotron>\n        <div className=\"text-center\">\n          <p className=\"text-center h3 mt-2\">404. Page Not Found</p>\n          <p className=\"mt-3\">\n            We can't find what you were looking for...{\" \"}\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              fill=\"currentColor\"\n              class=\"bi bi-emoji-frown ml-2\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\n              <path d=\"M4.285 12.433a.5.5 0 0 0 .683-.183A3.498 3.498 0 0 1 8 10.5c1.295 0 2.426.703 3.032 1.75a.5.5 0 0 0 .866-.5A4.498 4.498 0 0 0 8 9.5a4.5 4.5 0 0 0-3.898 2.25.5.5 0 0 0 .183.683zM7 6.5C7 7.328 6.552 8 6 8s-1-.672-1-1.5S5.448 5 6 5s1 .672 1 1.5zm4 0c0 .828-.448 1.5-1 1.5s-1-.672-1-1.5S9.448 5 10 5s1 .672 1 1.5z\" />\n            </svg>\n          </p>\n        </div>\n      </Jumbotron>\n    </>\n  );\n}\n","import { Button, Card, Container } from \"react-bootstrap\";\nimport Config from \"./config/config\";\nimport { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker } from \"react-leaflet\";\nimport RestaurantNotFound from \"./Restaurant/RestaurantNotFound\";\nimport Loading from \"./utils/Loading\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Main() {\n  const [randomRestaurant, setRandomRestaurant] = useState(null);\n  const [loading, setLoading] = useState(true);\n  let history = useHistory();\n  useEffect(() => {\n    /**\n     * Get a random restaurant between the first one and the 1000th one\n     */\n    async function fetchData() {\n      setLoading(true);\n      const randomPage = Math.trunc(Math.random() * 100 + 1);\n      const response = await fetch(\n        `${Config.uri}?page=${randomPage}&perPage=${Config.perPage}`\n      );\n      const data = await response.json();\n      const randomIndex = Math.trunc(Math.random() * 10);\n      if (data[randomIndex].hasOwnProperty(\"_id\")) {\n        setRandomRestaurant(data[randomIndex]);\n      } else {\n        setRandomRestaurant(null);\n      }\n      setLoading(false);\n    }\n    fetchData();\n  }, []);\n\n  if (!loading) {\n    if (randomRestaurant) {\n      return (\n        <>\n          <Container>\n            <Card>\n              {/* Image from Thomas Habr, source: https://unsplash.com/photos/6NmnrAJPq7M */}\n              <Card.Img\n                variant=\"top\"\n                src=\"/background.jpg\"\n                alt=\"N.Y. skyline\"\n              />\n              <Card.Body className=\"mid-background\">\n                <h2 className=\"text-center text-light\">New York Restaurants</h2>\n                <Card.Text className=\"text-center text-light\">\n                  An extensive list of restaurants in New York.\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Container>\n          <br />\n          <Container>\n            <Card>\n              <Card.Body>\n                <Card.Title className=\"text-center\">\n                  {\" \"}\n                  Feeling overwhelmed with so many choices? Try this random one:\n                </Card.Title>\n                <Card.Text className=\"d-flex justify-content-between\">\n                  <span>\n                    <span className=\"h3 font-weight-bold\">{randomRestaurant.name} </span>{\" \"}\n                    <span className=\"text-muted\">\n                      located at\n                      {randomRestaurant.address.building}{\" \"}\n                      {randomRestaurant.address.street} -{\" \"}\n                      {randomRestaurant.borough}\n                    </span>\n                  </span>\n                  <Button\n                    className=\"light-background\"\n                    onClick={() => {\n                      history.push(`/restaurant/${randomRestaurant._id}`);\n                    }}\n                  >\n                    More information\n                  </Button>\n                </Card.Text>\n\n                <MapContainer\n                  style={{ height: \"200px\" }}\n                  center={[\n                    randomRestaurant.address.coord[1],\n                    randomRestaurant.address.coord[0],\n                  ]}\n                  zoom={13}\n                  scrollWheelZoom={false}\n                >\n                  <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n                  <Marker\n                    position={[\n                      randomRestaurant.address.coord[1],\n                      randomRestaurant.address.coord[0],\n                    ]}\n                  ></Marker>\n                </MapContainer>\n              </Card.Body>\n            </Card>\n          </Container>\n        </>\n      );\n    } else {\n      const errorMessage = `Sorry. Something went wrong.`;\n      return <RestaurantNotFound search={errorMessage} />;\n    }\n  } else {\n    return <Loading />;\n  }\n}\n","/* eslint-disable require-jsdoc */\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { useState } from \"react\";\nimport {\n  Button,\n  Col,\n  Form,\n  FormControl,\n  Navbar,\n  Nav,\n  Container,\n  Row,\n} from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport About from \"./About\";\nimport Restaurant from \"./Restaurant/Restaurant\";\nimport Restaurants from \"./Restaurant/Restaurants\";\nimport NotFound from \"./NotFound\";\nimport Main from \"./Main\";\n\nfunction App() {\n  const [searchString, setSearchString] = useState(\"\");\n  let history = useHistory();\n  function handleSubmit(e) {\n    e.preventDefault();\n    history.push(`/restaurants?borough=${encodeURI(searchString)}`);\n    setSearchString(\"\");\n  }\n  return (\n    <>\n      <Navbar className=\"dark-background\" expand=\"lg\">\n        <LinkContainer to=\"/\">\n          <Navbar.Brand className=\"text-light\">\n            New York Restaurants\n          </Navbar.Brand>\n        </LinkContainer>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <LinkContainer to=\"/restaurants/\">\n              <Nav.Link className=\"text-light\">Full List</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to=\"/about\">\n              <Nav.Link className=\"text-light\">About</Nav.Link>\n            </LinkContainer>\n          </Nav>\n          <Form onSubmit={handleSubmit} inline>\n            <FormControl\n              type=\"text\"\n              placeholder=\"Borough\"\n              className=\"mr-sm-2\"\n              value={searchString}\n              onChange={(e) => setSearchString(e.target.value)}\n            />\n            <Button type=\"submit\" variant=\"outline-warning\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"16\"\n                height=\"16\"\n                fill=\"currentColor\"\n                class=\"bi bi-search\"\n                viewBox=\"0 0 16 16\"\n                className=\"mr-2 mb-1\"\n              >\n                <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\n              </svg>{\" \"}\n              Search\n            </Button>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n      <br />\n      <Container>\n        <Row>\n          <Col>\n            <Switch>\n              <Route exact path=\"/\" render={() => <Main />} />\n              <Route exact path=\"/about\" render={() => <About />} />\n              <Route\n                path=\"/restaurants\"\n                render={(props) => (\n                  <Restaurants query={props.location.search} />\n                )}\n              />\n              <Route\n                path=\"/restaurant/:id\"\n                render={(props) => <Restaurant id={props.match.params.id} />}\n              />\n              <Route render={() => <NotFound />} />\n            </Switch>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*********************************************************************************\n * WEB422 – Assignment 3\n * I declare that this assignment is my own work in accordance with Seneca Academic Policy.\n * No part of this assignment has been copied manually or electronically from any other source\n *  (including web sites) or distributed to other students.\n *\n * Name: Maickel Siqueira Student ID: 129337192 Date: 2021-02-09\n *\n *********************************************************************************/\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}